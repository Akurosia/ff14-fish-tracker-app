# Adjustments to current data, designed for quick updates without rebuilding
# the entire data.js file.
#
# The goal is to allow updates from anywhere!
#
# Example:
# - name: <FISH_NAME_EN>
#   fields:
#   - type: (string|number)
#     key: <fieldName in Fish class to update>
#     val: <value to use>
#
# For updating array fields, it's trickier.
# To add something to the array:
#   - type: array
#     key: conditions.weatherSet
#     val: 4
#     op: (add|rem)
#
# For bait:
#   - type: bait
#     key: path
#     val: ["Rat Tail", "Other Fish"]
#
#
# Remember, these modify the Fish objects, not the DATA.FISH which is what they
# derive from...
# Certain fields will require translation here, such as weather types.
# In addition, some fields like "alwaysAvailable" must be accounted for here.
# Please treat fields such as this as "number" types. The "string" type just
# means to surround the string in quotes.
#
# DON'T FORGET TO INCORPORATE THESE CHANGES INTO REAL fishData.yaml.
# Just... ignore the fact that file lives on the master branch, while this one
# lives in the gh-pages branch... Carby says it's fine.
- name: Blue Crab
  fields:
  - type: bait
    key: path
    val: Squid Strip
  - type: string
    key: tug
    val: light
  - type: string
    key: hookset
    val: Precision
- name: Fuchsia Bloom
  fields:
  - type: bait
    key: path
    val: Robber Ball
  - type: string
    key: tug
    val: light
  - type: string
    key: hookset
    val: Precision
- name: Giant Taimen
  fields:
  - type: bait
    key: path
    val: Baitbugs
  - type: string
    key: tug
    val: heavy
  - type: string
    key: hookset
    val: Powerful
- name: Gold Hammer
  fields:
  - type: bait
    key: path
    val: Baitbugs
  - type: string
    key: tug
    val: heavy
  - type: string
    key: hookset
    val: Powerful
  - type: weather
    key: weatherSet
    op: add
    val: 1
  - type: number
    key: alwaysAvailable
    val: false
